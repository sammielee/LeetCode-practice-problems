# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def constructMaximumBinaryTree(self, nums: List[int]) -> TreeNode:
        if len(nums) == 0:
            return None
        if len(nums) == 1:
            n = TreeNode(nums[0])
            return n
        maxNum = nums[0]
        maxLocation = 0
        i = 0
        while i < len(nums):
            if nums[i] > maxNum:
                maxNum = nums[i]
                maxLocation = i
            i+=1
        if (maxLocation > 0):
            left = self.constructMaximumBinaryTree(nums[0:maxLocation])
        else:
            left = None
        if (maxLocation < len(nums)-1):
            right = self.constructMaximumBinaryTree(nums[maxLocation+1:len(nums)])
        else:
            right = None
        n = TreeNode(maxNum, left, right)
        return n
